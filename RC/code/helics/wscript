# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def configure(conf):
    """Configure HELICS and JSONCPP library paths."""
    conf.check_cxx(
        lib="helics-shared",
        libpath=["/usr/local/lib"],
        uselib_store="HELICS",
        mandatory=True,
    )
    conf.check_cxx(
        lib="jsoncpp",
        libpath=["/usr/local/lib"],
        uselib_store="JSONCPP",
        mandatory=True,
    )
    conf.env["ENABLE_HELICS"] = True



def build(bld):
    """Build the helics ns-3 module with Modbus support."""
    module = bld.create_ns3_module('helics', ['core', 'network', 'internet'])
    # Link against HELICS and JSONCPP that were found in configure()
    module.uselib = ['HELICS', 'JSONCPP']
    module.source = [
        'model/helics-application.cc',
        'model/helics-static-source-application.cc',
        'model/helics-static-sink-application.cc',
        'model/helics-filter-application.cc',
        'model/helics-id-tag.cc',
        'model/helics-simulator-impl.cc',
        'helper/helics-helper.cc',
        'model/helics.cc',
        '../../../patch/modbus/helper/modbus-helper.cc',
        '../../../patch/modbus/model/modbus-master-app.cc',
        '../../../patch/modbus/model/modbus-slave-app.cc',
    ]

    headers = bld(features='ns3header')
    headers.module = 'helics'
    headers.source = [
        'model/helics-application.h',
        'model/helics-static-source-application.h',
        'model/helics-static-sink-application.h',
        'model/helics-filter-application.h',
        'model/helics-id-tag.h',
        'model/helics-simulator-impl.h',
        'helper/helics-helper.h',
        'model/helics.h',
        '../../../patch/modbus/helper/modbus-helper.h',
        '../../../patch/modbus/model/modbus-master-app.h',
        '../../../patch/modbus/model/modbus-slave-app.h',
    ]
